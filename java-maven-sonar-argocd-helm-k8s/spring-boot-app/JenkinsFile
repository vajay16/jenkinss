pipeline {
  agent any 
tools {
  maven 'latest'
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/vajay16/jenkinss']])
      }
    }
   stage('build') {
      steps { 
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean install'
      }
     }
     stage('sonarqube analysis') {
      steps { 
        withCredentials([string(credentialsId: 'sonarqube', variable: 'sonarqube')]) {
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean sonar:sonar -Dsonar.login=$sonarqube '
            }
      }
   }
      stage('build docker image'){
      environment {
         DOCKER_IMAGE = "ajay/ultimate-cicd:${BUILD_NUMBER}"
                  }
      steps{
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && sudo docker build -t $DOCKER_IMAGE .'
}
}
}
}
